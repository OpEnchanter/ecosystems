name: Build EXE

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.304'   # Use your .NET version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Publish EXE
        run: dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true

      - name: Copy published files to artifact directory
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifact

          # Find all publish directories
          $publishDirs = Get-ChildItem -Path . -Recurse -Directory -Filter publish

          foreach ($dir in $publishDirs) {
            # Copy all .exe files
            Copy-Item -Path "$($dir.FullName)\*.exe" -Destination artifact -Force -ErrorAction Ignore

            # Copy all .dll files
            Copy-Item -Path "$($dir.FullName)\*.dll" -Destination artifact -Force -ErrorAction Ignore

            # Copy shader folder if it exists
            if (Test-Path "$($dir.FullName)\shader") {
              Copy-Item -Path "$($dir.FullName)\shader" -Destination artifact -Recurse -Force
            }
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: v1.${{ github.run_number }}
          path: artifact/**

      - name: Create Github Release
        id: create_release
        uses: actions/create_release@v1
        with:
          tag_name: v1.${{ github.run_number }}
          release_name: Release v1.${{ github.run_number }}
          body: |
            Automated build.
            - Build version: v1.${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact
          asset_name: artifact.zip
          asset_content_type: application/zip