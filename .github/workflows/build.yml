name: Build & Publish

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.304'   # Use your .NET version

      - name: Notify ntfy on start
        if: ${{ success() }}
        run: |
          curl -H "Title: ℹ️ Build Started" -d "Project ecosystems build as started" "${{ secrets.NTFY_URL }}"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Publish Windows EXE
        run: dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true

      - name: Copy published windows files to win64 directory
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path win64

          # Find all publish directories
          $publishDirs = Get-ChildItem -Path ./bin/Release/net9.0/win-x64 -Recurse -Directory -Filter publish

          foreach ($dir in $publishDirs) {
            # Copy all .exe files
            Copy-Item -Path "$($dir.FullName)\*.exe" -Destination artifact -Force -ErrorAction Ignore

            # Copy all .dll files
            Copy-Item -Path "$($dir.FullName)\*.dll" -Destination artifact -Force -ErrorAction Ignore

            # Copy shader folder if it exists
            if (Test-Path "$($dir.FullName)\shader") {
              Copy-Item -Path "$($dir.FullName)\shader" -Destination win64 -Recurse -Force
            }
          }

      - name: Upload win64
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_number }} win64
          path: win64/**

      - name: Zip the win64 directory
        shell: pwsh
        run: Compress-Archive -Path win64/* -DestinationPath win64.zip

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Automated build.
            - Build version: v1.${{ github.run_number }}

            Download the .zip file for your os (ex. win64.zip for Windows).
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Windows Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: win64.zip
          tag_name: ${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify ntfy on success
        if: ${{ success() }}
        run: |
          curl -H "Title: ✅ Build Succeeded" -d "Project ecosystems was successfully built and published" "${{ secrets.NTFY_URL }}"

      - name: Notify ntfy on failure
        if: ${{ failure() }}
        run: |
          curl -H "Title: ❌ Build Failed" -d "Project ecosystems failed to be built and published" "${{ secrets.NTFY_URL }}"